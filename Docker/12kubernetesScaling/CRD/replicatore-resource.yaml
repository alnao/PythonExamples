
# replicatore-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: replicatore-operator
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole #ex Role
metadata:
  name: replicatore-role
  namespace: default
rules:
  - apiGroups: [""]  # core
    resources: ["pods", "services"]
    verbs: ["*"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["*"]
  - apiGroups: ["example.alnao.it"]
    resources: ["replicatori"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding #ex RoleBinding
metadata:
  name: replicatore-rolebinding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: replicatore-operator
    namespace: default
roleRef:
  kind: ClusterRole #ex Role
  name: replicatore-role
  apiGroup: rbac.authorization.k8s.io

---
# replicatore-operator-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: replicatore-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: replicatore-operator
  template:
    metadata:
      labels:
        app: replicatore-operator
    spec:
      serviceAccountName: replicatore-operator
      containers:
        - name: operator
          image: replicatore-operator
          imagePullPolicy: Never #Always

---
# replicatore-example.yaml
apiVersion: example.alnao.it/v1
kind: Replicatore
metadata:
  name: test-replicatore
spec:
  image: "nginx:alpine"
  replicas: 2

#kubectl apply -f replicatore-example.yaml