
---
# 2. Esempio Risorsa Custom
apiVersion: example.alnao.it/v1
kind: Supercrud
metadata:
  name: supercrud
spec:
  image: supercrud-application:latest
  replicas: 1

---
# 3. Deployment controller (Operator kopf con REST API)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: supercrud-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: supercrud-operator
  template:
    metadata:
      labels:
        app: supercrud-operator
    spec:
      serviceAccountName: supercrud-operator
      containers:
        - name: controller
          image:  supercrud-controller:latest
          imagePullPolicy: Never #Always
          ports:
            - containerPort: 8080

---
# 4. Service per controller REST API
apiVersion: v1
kind: Service
metadata:
  name: supercrud-operator-api
spec:
  selector:
    app: supercrud-operator
  type: NodePort  #oppure   type: LoadBalancer per esporre verso esterno ma solo su 8080 che non voglio usare, quindi nodePort
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      nodePort: 30080 #oppure   type: LoadBalancer per esporre verso esterno

## 4b ingress #dopo aver lanciato "minikube addons enable ingress" 
## nota: tolto perchè non riuscito a farlo funzionare 
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: supercrud-ingress
#  annotations:
#    nginx.ingress.kubernetes.io/rewrite-target: /$1
#spec:
#  rules:
#    - host: supercrud.nip.io
#      http:
#        paths:
#          - path: /api/ #(.*)
#            pathType: Prefix
#            backend:
#              service:
#                name: supercrud-service #ex supercrud-app-service
#                port:
#                  number: 80
#          - path: /operator/ #(.*)
#            pathType: Prefix
#            backend:
#              service:
#                name: supercrud-operator-api
#                port:
#                  number: 8080


---
# 5. PostgreSQL centrale (non scalabile)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---      
# 6. RBAC per controller
apiVersion: v1
kind: ServiceAccount
metadata:
  name: supercrud-operator
  namespace: default

#---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          env:
            - name: POSTGRES_DB
              value: mydb
            - name: POSTGRES_USER
              value: admin
            - name: POSTGRES_PASSWORD
              value: secret
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: postgres-storage
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole # ex Role
metadata:
  name: supercrud-cluster-role
rules:
  - apiGroups: [""]  # core
    resources: ["pods", "services", "events"]
    verbs: ["*"] # ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["*"] # ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["example.alnao.it"]
    resources: ["supercruds"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding #ex RoleBinding
metadata:
  name: supercrud-binding
subjects:
  - kind: ServiceAccount
    name: supercrud-operator
    namespace: default  # Add the namespace here
roleRef:
  kind: ClusterRole
  name: supercrud-cluster-role
  apiGroup: rbac.authorization.k8s.io


# commentato perchè li crea il controller
#---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: supecrud-deployments
#spec:
#  replicas: 2  # questo valore sarà sovrascritto dal controller
#  selector:
#    matchLabels:
#      app: supecrud-deployments
#  template:
#    metadata:
#      labels:
#        app: supecrud-deployments
#    spec:
#      containers:
#        - name: supecrud
#          image: supercrud-application
#          imagePullPolicy: Never #Always
#          ports:
#            - containerPort: 8000
#          env:
#            - name: DB_HOST
#              value: postgres-service
#            - name: DB_PORT
#              value: "5432"
#            - name: DB_NAME
#              value: mydb
#            - name: DB_USER
#              value: admin
#            - name: DB_PASSWORD
#              value: secret
#
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: supecrud-service
#spec:
#  selector:
#    app: supecrud-deployments
#  ports:
#    - port: 80
#      targetPort: 8000

