Resources:
  submitLambdaServiceRole576DCA8F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    DependsOn:
      - Cdk07stepFunctionSubmitBDBA739B
    Metadata:
      aws:cdk:path: Cdk07StepFunctionStack/submitLambda/ServiceRole/Resource
  submitLambda3C32AFD4:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 0bfb7e4da4670ff97ab0e216a55f4b6831ad5bcd1cc2f46a29698222838ca6fc.zip
      FunctionName: cdk06submit
      Handler: submit.lambda_handler
      Role:
        Fn::GetAtt:
          - submitLambdaServiceRole576DCA8F
          - Arn
      Runtime: python3.9
    DependsOn:
      - Cdk07stepFunctionSubmitBDBA739B
      - submitLambdaServiceRole576DCA8F
    Metadata:
      aws:cdk:path: Cdk07StepFunctionStack/submitLambda/Resource
      aws:asset:path: asset.0bfb7e4da4670ff97ab0e216a55f4b6831ad5bcd1cc2f46a29698222838ca6fc
      aws:asset:is-bundled: false
      aws:asset:property: Code
  statusLambdaServiceRoleD1132168:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    DependsOn:
      - Cdk07stepFunctionStatus01EDC5C1
    Metadata:
      aws:cdk:path: Cdk07StepFunctionStack/statusLambda/ServiceRole/Resource
  statusLambdaCF47B86D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 0bfb7e4da4670ff97ab0e216a55f4b6831ad5bcd1cc2f46a29698222838ca6fc.zip
      FunctionName: cdk06status
      Handler: status.lambda_handler
      Role:
        Fn::GetAtt:
          - statusLambdaServiceRoleD1132168
          - Arn
      Runtime: python3.9
    DependsOn:
      - Cdk07stepFunctionStatus01EDC5C1
      - statusLambdaServiceRoleD1132168
    Metadata:
      aws:cdk:path: Cdk07StepFunctionStack/statusLambda/Resource
      aws:asset:path: asset.0bfb7e4da4670ff97ab0e216a55f4b6831ad5bcd1cc2f46a29698222838ca6fc
      aws:asset:is-bundled: false
      aws:asset:property: Code
  Cdk07stepFunctionSubmitBDBA739B:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/cdk06submit
      RetentionInDays: 14
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Cdk07StepFunctionStack/Cdk07stepFunctionSubmit/Resource
  Cdk07stepFunctionStatus01EDC5C1:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/cdk06status
      RetentionInDays: 14
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Cdk07StepFunctionStack/Cdk07stepFunctionStatus/Resource
  StateMachineRoleB840431D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: states.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Cdk07StepFunctionStack/StateMachine/Role/Resource
  StateMachineRoleDefaultPolicyDF1E6607:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - statusLambdaCF47B86D
                  - Arn
              - Fn::GetAtt:
                  - submitLambda3C32AFD4
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - statusLambdaCF47B86D
                        - Arn
                    - :*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - submitLambda3C32AFD4
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: StateMachineRoleDefaultPolicyDF1E6607
      Roles:
        - Ref: StateMachineRoleB840431D
    Metadata:
      aws:cdk:path: Cdk07StepFunctionStack/StateMachine/Role/DefaultPolicy/Resource
  StateMachine2E01A3A5:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"Submit Job","States":{"Submit Job":{"Next":"Wait 30 Seconds","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - submitLambda3C32AFD4
                - Arn
            - '","Payload.$":"$"}},"Wait 30 Seconds":{"Type":"Wait","Seconds":30,"Next":"Get Status"},"Get Status":{"Next":"Job Complete?","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - statusLambdaCF47B86D
                - Arn
            - '","Payload.$":"$"}},"Job Complete?":{"Type":"Choice","Choices":[{"Variable":"$.status","StringEquals":"FAILED","Next":"Fail"},{"Variable":"$.status","StringEquals":"SUCCEEDED","Next":"Succeeded"}],"Default":"Wait 30 Seconds"},"Fail":{"Type":"Fail","Error":"DescribeJob returned FAILED","Cause":"AWS Batch Job Failed"},"Succeeded":{"Type":"Succeed","Comment":"AWS Batch Job succeeded"}},"TimeoutSeconds":3000}'
      RoleArn:
        Fn::GetAtt:
          - StateMachineRoleB840431D
          - Arn
      StateMachineName: Cdk07stepFunction
    DependsOn:
      - StateMachineRoleDefaultPolicyDF1E6607
      - StateMachineRoleB840431D
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: Cdk07StepFunctionStack/StateMachine/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1VPXWuDQBD8LXlft1gLpY+NkFJIIehDH2VzbnTreRfcu4Yg/veiVmifZmY/mJlHTJ+eMdvRTRNTd4mVM45lINMB3bQaLfXnmnA8RGeCeAf5xW18AqEex8JbnscLnrwVc5/lyibQrCJVDoqvM4BmuI+m47AnZbC+URyPvnkbfLzOfxufQANfL79eWgXSTvG45Hl3377j/wc4fpIEOJBYKKMxzDXkrRfDUAYK/EGmFbck/aunCQpWHwfDsAQsAzXimqXRtsgvLveulrX16R5a7x4yTFN82X2pSDJEF6RnLFb8AaT9/FhWAQAA
    Metadata:
      aws:cdk:path: Cdk07StepFunctionStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

